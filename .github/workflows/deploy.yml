name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      units:
        description: 'units'     
        required: true
      optimizer:
        description: 'optimizer'     
        required: true

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: |
        echo "TAG=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
        
    - name: Docker Build & Push Action
      uses: mr-smithers-excellent/docker-build-push@v5.6
      with:
        image: mnist_classifier
        tags: ${{ env.TAG }}
        registry: ghcr.io
        dockerfile: Dockerfile
        directory: .
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        buildArgs: GCS_BUCKET_ARG=${{ secrets.GCS_BUCKET }}
        addLatest: true
    
    - name: Checkout mlops_mnist_config
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.SECRET_TOKEN}}
        repository: KIMnJANG/deploy-pipeline
        path: deploy-pipeline
        
    - name: set hyper parameter
      run: |
        cd deploy-pipeline/kustomize/overlays/dev
        echo $(jq '.[].value = ["--optimizer", "${{ github.event.inputs.optimizer }}", "--units", ${{ github.event.inputs.units }}]' training-job-patch.json) > training-job-patch.json
        git config --global user.name ${{ github.repository_owner }}
        git config --global user.email "iam@junil.kim"
        git commit -am 'Publish new version ${GITHUB_SHA} to dev'
        git push || echo 'no changes'
