name: Run Experiment Pipeline

on:
  create:
    tags:
      - "v*"
jobs:
  image-push:
    runs-on: ubuntu-latest

    env:
      TOKEN: ${{ secrets.SECRET_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   token: ${{ secrets.SECRET_TOKEN }}
        #   ref: main
      # tag v0.0.1 -> RELEASE_VERSION = 0.0.1
      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.SECRET_TOKEN }}

      # Ssuwani -> ssuwani for ghcr naming rule
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: Train Image Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC}}/train-mnist:${{ env.RELEASE_VERSION}}
          build-args: |
            GCS_BUCKET_ARG=${{ secrets.GCS_BUCKET }}
            MODEL_TAG_ARG=${{env.RELEASE_VERSION}}
            GITHUB_OWNER_ARG=KIMnJANG
            GITHUB_REPO_ARG=deploy-pipeline
            GITHUB_WORKFLOW_ARG=bentoml.yml
            GITHUB_TOKEN_ARG=${{ secrets.SECRET_TOKEN}}

      - name: run Experiment Pipeline
        run: |
          curl -u ":$TOKEN" \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/kimnjang/experiment-pipeline/actions/workflows/cd.yml/dispatches \
            -d '{"ref": "master", 
                "inputs": {
                    "RELEASE_VERSION": "${{env.RELEASE_VERSION}}"}
            }'
